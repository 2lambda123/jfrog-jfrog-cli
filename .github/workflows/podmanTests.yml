name: Podman Tests
on:
  push:
  # Triggers the workflow on labeled PRs only.
  pull_request_target:
    types: [labeled]
# Ensures that only the latest commit is running for each PR at a time.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  Podman-tests:
    if: contains(github.event.pull_request.labels.*.name, 'safe to test') || github.event_name == 'push'
    name: ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.x
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Podman Login
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.PLATFORM_USER }}
          password: ${{ secrets.PLATFORM_ADMIN_TOKEN }}
      - name: Run podman tests
        run: go test -v -timeout 0 --test.podman --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }} --test.ContainerRegistryDeployment=${{ secrets.CONTAINER_REGISTRY }} --test.ContainerRegistryResolution=${{ secrets.CONTAINER_REGISTRY }} --test.ContainerRegistryResolutionAccessToken=${{ secrets.PLATFORM_ADMIN_TOKEN }} --test.ContainerRegistryResolutionUsername=${{ secrets.PLATFORM_USER }}

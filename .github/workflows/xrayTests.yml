name: Xray Tests
on:
  push:
  # Triggers the workflow on labeled PRs only.
  pull_request_target:
    types: [labeled]
# Ensures that only the latest commit is running for each PR at a time.
# Ignores this rule for push events.
concurrency:
  group: ${{ github.event.pull_request.number || github.sha }}xray
  cancel-in-progress: true
jobs:
  CLI-Tests:
    if: contains(github.event.pull_request.labels.*.name, 'safe to test') || github.event_name == 'push'
    name: ${{ matrix.suite }} (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        suite: [xray]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17.x

      - name: Install npm
        uses: actions/setup-node@v3
        with:
          node-version: "16"
        if: ${{ matrix.suite == 'npm' || matrix.suite == 'xray' }}

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "adopt"
        if: ${{ matrix.suite == 'maven' || matrix.suite == 'gradle' || matrix.suite == 'xray' }}

      - name: Install NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: 5.x
        if: ${{ matrix.suite == 'nuget' }}

      - name: Install dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "3.x"
        if: ${{ matrix.suite == 'nuget' }}

      - name: Setup Python3
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Setup Pipenv
        if: ${{ matrix.suite == 'pipenv' || matrix.suite == 'xray' }}
        run: pip3 install pipenv

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Run Distribution / Xray / Access tests
        run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.${{ matrix.suite }}=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }} --jfrog.user=${{ secrets.PLATFORM_USER }} --ci.runId=${{ runner.os }}-${{ matrix.suite }}

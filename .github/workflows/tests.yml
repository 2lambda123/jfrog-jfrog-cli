name: JFrog CLI Tests
on: [push, pull_request]
env:
  GOPROXY: direct
jobs:
  Artifactory-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Lint
      run: go vet -v ./...
    - name: Artifactory-Tests
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.artifactory=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  Xray-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Xray-Tests
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.xray=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  npm-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Install npm
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: npm-Tests
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.npm=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  Maven-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Install Maven
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'zulu'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Maven-Tests
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.maven=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  Gradle-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Install Gradle
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'zulu'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Gradle-Tests
      env:
        GRADLE_OPTS: -Dorg.gradle.daemon=false
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.gradle=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  NuGet-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Install NuGet
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: 5.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: NuGet-Tests
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.nuget=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  Go-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Go-Tests
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.go=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  Docker-Tests:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Docker-Tests
      run: go test -v -timeout 0 --test.docker=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }} --rt.dockerRepoDomain=ecosysjfrog-docker-virtual.jfrog.io --rt.dockerVirtualRepo=docker-virtual --rt.DockerLocalRepo=docker-local --rt.dockerRemoteRepo=docker-remote
  Python-Ubuntu-Tests:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Python virtual environment
      run: python -m venv venv
    - name: Python-Tests
      run: |
        source venv/bin/activate
        go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.pip=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  Python-MacOS-Tests:
    runs-on: macos-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Python virtual environment
      run: python -m venv venv
    - name: Python-Tests
      run: |
        source venv/bin/activate
        go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.pip=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  Python-Windows-Tests:
    runs-on: windows-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Python virtual environment
      run: python -m venv venv
    - name: Python-Tests
      run: |
        . venv\Scripts\activate.ps1
        go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.pip=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}
  Distribution-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Distribution-Tests
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.distribution=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }} --jfrog.user=${{ secrets.PLATFORM_USER }}
  Plugins-Tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Plugins-Tests
      run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.plugins=true --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.adminToken=${{ secrets.PLATFORM_ADMIN_TOKEN }}